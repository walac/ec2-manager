defaults:
  app:
    id: 'ec2-manager'
    houseKeepingPollDelay: 3600 # (seconds) 1 hour
    maxInstanceLifeHours: 96 # (hours)
    regions:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - ca-central-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
    queueName: 'ec2-events'
    ruleName: 'ec2-instance-state-transitions'
    publishMetadata: false
    pricingPollDelay: 900 # (seconds) 15 minutes
    pricingTimePeriod: 30 # (seconds)
  ec2:
    apiVersion: 2016-11-15
  sqs:
    apiVersion: 2012-11-05
  cwe:
    apiVersion: 2015-10-07
  aws:
    accessKeyId: !env AWS_ACCESS_KEY_ID
    secretAccessKey: !env AWS_SECRET_ACCESS_KEY
    maxRetries: 3
    sslEnabled: true
    httpOptions:
      timeout: 10000
      connectTimeout: 2000
  postgres:
    databaseUrl: !env DATABASE_URL
  server:
    port: 5555
    env: development
    forceSSL: false
    trustProxy: false
  monitoring:
    project: !env MONITORING_PROJECT
    enable: !env:bool MONITORING_ENABLE
    mock: false
  taskcluster:
    rootUrl: !env TASKCLUSTER_ROOT_URL
    credentials:
      clientId: !env TASKCLUSTER_CLIENT_ID
      accessToken: !env TASKCLUSTER_ACCESS_TOKEN
development:
  app:
    id: 'ec2-manager-development'
    regions:
      - us-west-2
  monitoring:
    enable: false
production:
  server:
    port: !env:number PORT
    env: production
    forceSSL: true
    trustProxy: true
  app:
    id: 'ec2-manager-production'
    publishMetadata: true
  postgres:
    maxClients: 90
staging:
  server:
    port: !env:number PORT
    env: production
    forceSSL: true
    trustProxy: true
  app:
    id: 'ec2-manager-staging'
    publishMetadata: false
  postgres:
    maxClients: 10
test:
  postgres:
    maxClients: 5
  monitoring:
    enable: false
  app:
    id: 'ec2-manager-test'
